[
  {
    "op" : "add",
    "path" : "/v-coreLightningSpawnerSpawner",
    "value" : {
      "type" : "periodic",

      "octaves" : 1,
      "alpha" : 1.0,
      "beta" : 1.0,

      "modulus" : 100,  // If modulus is n, place something every nth block
      "modulusVariance" : 0,  // Adds a random element m to modulus. Now modulus will be between n - m and n + m.

      // Offset is set to 1 to guarantee that an object is placed at any given position on the surface.
      "densityPeriod" : 1,  // Pretty much the inverse of frequency. The higher this number, the more smooth the placement.
      "densityOffset" : 1,

      "typePeriod" : 500
    }
  },
  {
    "op" : "add",
    "path" : "/v-poisonGasPrimer",
    "value" : {
      "type" : "periodic",

      "octaves" : 1,
      "alpha" : 1.0,
      "beta" : 1.0,

      "modulus" : 30,  // If modulus is n, place something every nth block
      "modulusVariance" : 0,  // Adds a random element m to modulus. Now modulus will be between n - m and n + m.

      // Offset is set to 1 to guarantee that an object is placed at any given position on the surface.
      "densityPeriod" : 1,  // Pretty much the inverse of frequency. The higher this number, the more smooth the placement.
      "densityOffset" : 1,

      "typePeriod" : 500
    }
  },
  {
    "op" : "add",
    "path" : "/v-railgunPickup",
    "value" : {
      "type" : "random",

      "blockProbability" : 0.005
    }
  },
  {
    "op" : "add",
    "path" : "/v-killerBeeHive",
    "value" : {
      "type" : "random",

      "blockProbability" : 0.01
    }
  },
  {
    "op" : "add",
    "path" : "/v-mushroom",
    "value" : {
      "type" : "periodic",

      "octaves" : 1,
      "alpha" : 1.0,
      "beta" : 1.0,

      "modulus" : 10,  // If modulus is n, place something every nth block
      "modulusVariance" : 9,  // Adds a random element m to modulus. Now modulus will be between n - m and n + m.

      // Offset is set to 1 to guarantee that an object is placed at any given position on the surface.
      "densityPeriod" : 1,  // Pretty much the inverse of frequency. The higher this number, the more smooth the placement.
      "densityOffset" : 1,

      "typePeriod" : 500
    }
  },
  {
    "op" : "add",
    "path" : "/v-poisonGasEmitter",
    "value" : {
      "type" : "random",

      "blockProbability" : 0.5
    }
  },
  {
    "op" : "add",
    "path" : "/v-mainBiomeMicrodungeon",
    "value" : {
      "type" : "periodic",

      "octaves" : 1,
      "alpha" : 1.0,
      "beta" : 1.0,

      "modulus" : 120,  // If modulus is n, place something every nth block
      "modulusVariance" : 30,  // Adds a random element m to modulus. Now modulus will be between n - m and n + m.

      "densityPeriod" : 600,
      "densityOffset" : 1,

      "typePeriod" : 600
    }
  },
  {
    "op" : "add",
    "path" : "/v-undergroundVoltageTraps",
    "value" : {
      "type" : "periodic",

      "octaves" : 3,
      "alpha" : 1.2,
      "beta" : 3.0,

      "modulus" : 1,
      "modulusVariance" : 0,

      "densityPeriod" : 20,
      "densityOffset" : 0.3,

      "typePeriod" : 16
    }
  },
  {
    "op" : "add",
    "path" : "/v-electricTree",
    "value" : {
      "type" : "periodic",

      "octaves" : 2,
      "alpha" : 2.0,
      "beta" : 2.0,

      "modulus" : 12,
      "modulusVariance" : 4,

      "densityPeriod" : 4,
      "densityOffset" : -0.4,

      "typePeriod" : 10
    }
  },
  {
    "op" : "add",
    "path" : "/v-electricTreeRusty",
    "value" : {
      "type" : "periodic",

      "octaves" : 2,
      "alpha" : 1.0,
      "beta" : 2.0,

      "modulus" : 12,
      "modulusVariance" : 4,

      "densityPeriod" : 4,
      "densityOffset" : -0.2,

      "typePeriod" : 10
    }
  }
]